import React, { useEffect } from "react";
import NumberedList from "../ui/NumberedList";
import css from "./Rules.module.css";

interface TelegramWebApp {
  HapticFeedback?: {
    impactOccurred?: (type: string) => void;
  };
}

const tg = (
  window as unknown as { Telegram?: { WebApp?: TelegramWebApp } }
).Telegram?.WebApp;

type Props = { onStart: () => void };

export default function Rules({ onStart }: Props) {
  useEffect(() => {
    // simple asset warmup ‚Äî safe after user interacted on Welcome
    const audios = [
      "/sfx/correct.mp3",
      "/sfx/wrong.mp3",
      "/sfx/heal.mp3",
      "/sfx/fanfare.mp3",
    ];
    audios.forEach((src) => {
      const a = new Audio(src);
      a.preload = "auto";
    });
  }, []);

  const list = [
    { id: 1, text: "–°–≤–µ—Ä—Ö—É –ø–∞–¥–∞—é—Ç –∫–Ω–æ–ø–∫–∏ —Å –∑–∞–¥–∞—á–∞–º–∏" },
    { id: 2, text: "–ù–∞ —ç–∫—Ä–∞–Ω–µ –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑–∞–Ω–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –∏ –∫–ª–∏–∫–Ω—É—Ç—å" },
    { id: 3, text: "–ñ–º–∏ —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—É—é –∑–∞–¥–∞—á—É, –æ—Å—Ç–∞–ª—å–Ω–æ–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π" },
  ];

  const start = () => {
    try {
      tg?.HapticFeedback?.impactOccurred?.("light");
    } catch {
      // ignore haptic errors
    }
    onStart();
  };

  return (
    <div className={css.screen} role="main" aria-labelledby="r-title">
      <h1 id="r-title" className={css.title}>
        {"–ü—Ä–∞–≤–∏–ª–∞\u00A0–∏–≥—Ä—ã"}
      </h1>

      <NumberedList items={list} />

      <div className={css.hintCard} role="note" aria-label="–ü–æ–¥—Å–∫–∞–∑–∫–∞">
        <div className={css.bulb} aria-hidden>üí°</div>
        <div className={css.hintText}>
          –ß–µ–º –±—ã—Å—Ç—Ä–µ–µ –∫–ª–∏–∫–∞–µ—à—å ‚Äî —Ç–µ–º –±–æ–ª—å—à–µ –æ—á–∫–æ–≤. –ü—Ä–æ–º–∞—Ö ‚Äî –º–∏–Ω—É—Å –≤—Ä–µ–º—è
        </div>
      </div>

      <button className={css.cta} onClick={start} aria-label="–ù–∞—á–∞—Ç—å –∏–≥—Ä—É">
        –ü–æ–≥–Ω–∞–ª–∏ üöÄ
      </button>
    </div>
  );
}
